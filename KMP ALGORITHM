//TC:O(M+N) //SC:O(M)
vector<int> Prefix_or_Pi(string s){
    vector<int>pi(s.size(),0);
    int j;
    for(int i=1;i<s.size();i++){
         j=pi[i-1];
         while(j>0 && s[i]!=s[j]) j=pi[j-1];
         if(s[i]==s[j]) j++;
         pi[i]=j;
    }
    return pi;
}
vector<int> KMP(string s,string pat){
    vector<int>ans;//stores starting indices in s at which pat matches
    vector<int>pi=Prefix_or_Pi(pat);
    int i=0,j=0;
    while(i<s.size()){
        if(s[i]==pat[j]) {
            i++;j++;
        }
        if(j==pat.size()) {
            ans.push_back(i-j);
            j=pi[j-1];
        }
        else if(i<s.size() && s[i]!=pat[j]){
            if(j!=0) j=pi[j-1];
            else i++;
        }


    }
    return ans;
}
